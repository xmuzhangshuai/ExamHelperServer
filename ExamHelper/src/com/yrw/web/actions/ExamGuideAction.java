/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yrw.web.actions;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.yrw.domains.Examguide;
import com.yrw.domains.Examguidetype;
import com.yrw.domains.Subject;
import com.yrw.service.ExamGuideService;
import com.yrw.service.SubjectService;

public class ExamGuideAction extends DispatchAction {
	private ExamGuideService examGuideService;
	private SubjectService subjectService;

	public void setExamGuideService(ExamGuideService examGuideService) {
		this.examGuideService = examGuideService;
	}

	public void setSubjectService(SubjectService subjectService) {
		this.subjectService = subjectService;
	}

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addExamGuide(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		// TODO Auto-generated method stub
		String title = request.getParameter("title");
		String url = request.getParameter("url");
		String date = request.getParameter("date");
		int typeID = Integer.parseInt(request.getParameter("type"));
		examGuideService.addExamGuide(typeID, title, url, date);
		return showExamGuideList(mapping, form, request, response);
	}

	/**
	 * 添加类型
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward addExamGuideType(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		// TODO Auto-generated method stub
		String title = request.getParameter("title");
		String subject = request.getParameter("subject");
		int subjectID = Integer.parseInt(subject);
		examGuideService.addExamType(subjectID, title);
		return showExamGuideTypeList(mapping, form, request, response);
	}

	/**
	 * 删除考试指南目录
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward deleteExamGuideType(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		// TODO Auto-generated method stub
		int pageNow = 1;
		int typeId = -1;
		int pageCount = examGuideService.getExamGuideTypePageCount();
		String pageNowString = request.getParameter("pageNow");
		String typeIdString = request.getParameter("typeId");
		if (typeIdString != null) {
			typeId = Integer.parseInt(typeIdString);
		}
		if (pageNowString != null) {
			pageNow = Integer.parseInt(pageNowString);
			if (pageNow < 1)
				pageNow = 1;
			else if (pageNow > pageCount)
				pageNow = pageCount;
		}

		if (typeId > -1) {
			examGuideService.deleteExamGuideType(typeId);
		}

		List<Subject> subjectList = subjectService.getSubjects();
		request.setAttribute("subjectList", subjectList);
		List<Examguidetype> examguidetypeList = examGuideService.getExamguideTypeListByPage(pageNow);
		request.setAttribute("examguidetypeList", examguidetypeList);
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("showExamGuideType");
	}

	/**
	 * 删除考试指南文章列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward deleteExamGuide(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		// TODO Auto-generated method stub
		int pageNow = 1;
		List<Examguide> examguideList = null;
		int pageCount = 0;
		int examGuideId = -1;
		String pageNowString = request.getParameter("pageNow");
		String examGuideString = request.getParameter("examGuideId");
		if (examGuideString != null) {
			examGuideId = Integer.parseInt(examGuideString);
		}

		String typeId = request.getParameter("id");
		if (typeId == null || (typeId != null && typeId.length() == 0)) {
			pageCount = examGuideService.getExamGuidePageCount();
			if (pageNowString != null) {
				pageNow = Integer.parseInt(pageNowString);
				if (pageNow < 1)
					pageNow = 1;
				else if (pageNow > pageCount)
					pageNow = pageCount;
			}
			if (examGuideId > -1) {
				examGuideService.deleteExamGuide(examGuideId);
			}
			examguideList = examGuideService.getExamguideListByPage(pageNow);
		} else {
			int typeID = Integer.parseInt(typeId);
			pageCount = examGuideService.getExamGuidePageCount(typeID);
			if (pageNowString != null) {
				pageNow = Integer.parseInt(pageNowString);
				if (pageNow < 1)
					pageNow = 1;
				else if (pageNow > pageCount)
					pageNow = pageCount;
			}
			if (examGuideId > -1) {
				examGuideService.deleteExamGuide(examGuideId);
			}
			examguideList = examGuideService.getExamguideListByPage(pageNow, typeID);
			request.setAttribute("id", typeId);
		}

		List<Subject> subjectList = subjectService.getSubjects();
		request.setAttribute("subjectList", subjectList);
		request.setAttribute("examGuideList", examguideList);
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("showExamGuide");
	}

	/**
	 * 展示考试指南文章列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward showExamGuideList(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		// TODO Auto-generated method stub
		int pageNow = 1;
		List<Examguide> examguideList = null;
		int pageCount = 0;
		String pageNowString = request.getParameter("pageNow");

		String typeId = request.getParameter("id");
		if (typeId == null || (typeId != null && typeId.length() == 0)) {
			pageCount = examGuideService.getExamGuidePageCount();
			if (pageNowString != null) {
				pageNow = Integer.parseInt(pageNowString);
				if (pageNow < 1)
					pageNow = 1;
				else if (pageNow > pageCount)
					pageNow = pageCount;
			}
			examguideList = examGuideService.getExamguideListByPage(pageNow);
		} else {
			int typeID = Integer.parseInt(typeId);
			pageCount = examGuideService.getExamGuidePageCount(typeID);
			if (pageNowString != null) {
				pageNow = Integer.parseInt(pageNowString);
				if (pageNow < 1)
					pageNow = 1;
				else if (pageNow > pageCount)
					pageNow = pageCount;
			}
			examguideList = examGuideService.getExamguideListByPage(pageNow, typeID);
			request.setAttribute("id", typeId);
		}

		List<Subject> subjectList = subjectService.getSubjects();
		request.setAttribute("subjectList", subjectList);
		request.setAttribute("examGuideList", examguideList);
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("showExamGuide");
	}

	/**
	 * 展示考试指南目录列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward showExamGuideTypeList(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		// TODO Auto-generated method stub
		int pageNow = 1;
		int pageCount = examGuideService.getExamGuideTypePageCount();
		String pageNowString = request.getParameter("pageNow");
		if (pageNowString != null) {
			pageNow = Integer.parseInt(pageNowString);
			if (pageNow < 1)
				pageNow = 1;
			else if (pageNow > pageCount)
				pageNow = pageCount;
		}

		List<Subject> subjectList = subjectService.getSubjects();
		request.setAttribute("subjectList", subjectList);
		List<Examguidetype> examguidetypeList = examGuideService.getExamguideTypeListByPage(pageNow);
		request.setAttribute("examguidetypeList", examguidetypeList);
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("showExamGuideType");
	}

	/**
	 * 查找考试指南目录列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward searchTypeList(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		// TODO Auto-generated method stub
		int pageNow = 1;
		int pageCount = 0;
		
		String pageNowString = request.getParameter("pageNow");
		if (pageNowString != null) {
			pageNow = Integer.parseInt(pageNowString);
			if (pageNow < 1)
				pageNow = 1;
			else if (pageNow > pageCount)
				pageNow = pageCount;
		}
		List<Subject> subjectList = subjectService.getSubjects();
		List<Examguidetype> examguidetypeList = examGuideService.getExamguideTypeListByPage(pageNow);
		int index = Integer.parseInt(request.getParameter("index"));
		int subjectId = subjectList.get(index).getId();

		
		request.setAttribute("subjectList", subjectList);
		request.setAttribute("examguidetypeList", examguidetypeList);
		request.setAttribute("pageCount", pageCount);
		request.setAttribute("pageNow", pageNow);
		return mapping.findForward("showExamGuideType");
	}

	/**
	 * 返回带有考试指南目录的页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward examGuideType(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		List<Subject> subjectList = subjectService.getSubjects();
		request.setAttribute("subjectList", subjectList);
		return mapping.findForward("addExamGuide");
	}

	/**
	 * 返回带有科目的页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward getSubjectList(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		List<Subject> subjectList = subjectService.getSubjects();
		request.setAttribute("subjectList", subjectList);
		return mapping.findForward("addExamGuideType");
	}
}