/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yrw.web.actions;

import java.io.UnsupportedEncodingException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.yrw.config.DefaultValue;
import com.yrw.domains.Questiontype;
import com.yrw.domains.Section;
import com.yrw.domains.Subject;
import com.yrw.service.QuestionService;
import com.yrw.service.SectionService;
import com.yrw.service.SubjectService;

/**
 * 
 * 项目名称：ExamHelper 类名称：QuestionAction 类描述： 跟题目操作有关的action 创建人：叶睿雯 创建时间：2014-3-17
 * 修改人： 修改时间： 修改备注：
 * 
 * @version
 * 
 */
public class QuestionAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private SubjectService subjectService;
	private QuestionService questionService;
	private SectionService sectionService;

	public void setSubjectService(SubjectService subjectService) {
		this.subjectService = subjectService;
	}

	public void setSectionService(SectionService sectionService) {
		this.sectionService = sectionService;
	}

	public void setQuestionService(QuestionService questionService) {
		this.questionService = questionService;
	}

	/**
	 * Method showQuestionBySection 按题目章节
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws UnsupportedEncodingException
	 */
	public ActionForward showQuestionBySection(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws UnsupportedEncodingException {
		// TODO Auto-generated method stub

		// 加载章节类型
		String sectionName = new String(request.getParameter("sectionName").getBytes("ISO-8859-1"), "utf-8");
		String typeName = new String(request.getParameter("typeName").getBytes("ISO-8859-1"), "utf-8");

		request.getSession().setAttribute("typeName", typeName);
		String pageNowString = request.getParameter("pageNow");

		int subjectId = (Integer) request.getSession().getAttribute("subjectId");

		// 加载问题类型
		List<Questiontype> questiontypes = questionService.showQuestiontypes();
		request.setAttribute("questionTypeName", typeName);
		request.setAttribute("questionTypes", questiontypes);

		// 加载章节下的题目
		Section existSection = sectionService.getSectionBySectionName(sectionName);
		List collection = questionService.listQuestionBySection(existSection.getId(), pageNowString, typeName);

		Map<String, Integer> pageMap = (Map<String, Integer>) collection.get(0);
		request.setAttribute("pageCount", pageMap.get("pageCount"));
		request.setAttribute("pageNow", pageMap.get("pageNow"));
		// 为jsp中的hidden设置值
		request.setAttribute("sectionName", sectionName);
		// 设置问题
		if (typeName.equals(DefaultValue.SINGLE_CHOICE))

			request.setAttribute("singleChoices", (List) collection.get(1));
		else if (typeName.equals(DefaultValue.MULTI_CHOICE))

			request.setAttribute("multiChoices", (List) collection.get(1));
		else if (typeName.equals(DefaultValue.TRUE_OR_FALSE))

			request.setAttribute("trueOrFalses", (List) collection.get(1));
		else if (typeName.equals(DefaultValue.MATERIAL_ANALYSIS))
			request.setAttribute("materialAnalysises", (List) collection.get(1));

		return mapping.findForward((String) collection.get(2));
	}

	/**
	 * Method deleteQuestion 删除问题
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws UnsupportedEncodingException
	 */
	public ActionForward deleteQuestion(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws UnsupportedEncodingException {

		int id = Integer.parseInt(request.getParameter("id"));
		String typeName = new String(request.getParameter("typeName").getBytes("ISO-8859-1"), "utf-8");

		questionService.deleteQuestion(typeName, id);
		return showQuestionBySection(mapping, form, request, response);
	}

	/**
	 * 显示问题列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward showQuestionList(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {

		request.getSession().removeAttribute("subjectId");
		request.removeAttribute("sectionName");
		request.removeAttribute("questionTypeName");

		List<Subject> subjects = subjectService.getSubjects();
		List<Questiontype> questiontypes = questionService.showQuestiontypes();
		request.setAttribute("subjects", subjects);
		request.setAttribute("questionTypes", questiontypes);
		return mapping.findForward("showQuestion");
	}
	/**加载section下拉列表
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward loadSectionList(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) {
		
		int subjectId=Integer.parseInt(request.getParameter("subjectId"));
		
		
	}

}